---
- name: enable epel repository
  yum:
    name: epel-release
    state: present

- name: install pip
  yum:
    name: python-pip
    state: present

- name: install dumb-init
  pip:
    name: dumb-init
    version: "{{ manageiq_dumb_init_version }}"

- name: download manageiq repo file
  get_url:
    url: https://copr.fedorainfracloud.org/coprs/manageiq/ManageIQ-Fine/repo/epel-7/manageiq-ManageIQ-Fine-epel-7.repo
    dest: /etc/yum.repos.d/manageiq-ManageIQ-Fine-epel-7.repo

- name: install PostgreSQL repo rpm
  yum:
    name: "{{ manageiq_postgresql_repo_url }}"
    state: present

- name: install required packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - "centos-release-scl-rh"
    - "bison"
    - "bzip2"
    - "cmake"
    - "file"
    - "gcc-c++"
    - "git"
    - "libcurl-devel"
    - "libffi-devel"
    - "libtool"
    - "libxml2-devel"
    - "libxslt-devel"
    - "libyaml-devel"
    - "make"
    - "memcached"
    - "net-tools"
    - "nodejs"
    - "openssl-devel"
    - "openscap-scanner"
    - "patch"
    - "postgresql{{ manageiq_postgresql_version }}-server"
    - "postgresql{{ manageiq_postgresql_version }}-devel"
    - "repmgr{{ manageiq_postgresql_version }}"
    - "readline-devel"
    - "sqlite-devel"
    - "sysvinit-tools"
    - "which"
    - "httpd"
    - "mod_ssl"
    - "mod_auth_kerb"
    - "mod_authnz_pam"
    - "mod_intercept_form_submit"
    - "mod_lookup_identity"
    - "initscripts"
    - "npm"
    - "chrony"
    - "psmisc"
    - "lvm2"
    - "openldap-clients"
    - "gdbm-devel"
    - "cronie"
    - "logrotate"
    - "http-parser"

- name: delete all files unnecessary systemd files
  file:
    path: "{{ item }}/"
    state: absent
  with_items:
    - "/lib/systemd/system/sysinit.target.wants"
    - "/lib/systemd/system/multi-user.target.wants"
    - "/lib/systemd/system/local-fs.target.wants"
    - "/lib/systemd/system/basic.target.wants"
    - "/lib/systemd/system/anaconda.target.wants"

- name: find /etc/systemd/system files to be deleted
  find:
    paths:
      - "/etc/systemd/system"
    patterns: "/*.wants/*"
  register: find_results_etc_systemd

- name: find lib/systemd/system files to be deleted
  find:
    paths:
      - "/lib/systemd/system/sockets.target.wants"
    patterns:
      - "/*udev*"
      - "/*initctl*"
  register: find_results_lib_systemd

- name: delete systemd files using patterns
  file:
    path: "{{ item['path'] }}"
    state: absent
  with_items:
    - "{{ find_results_etc_systemd['files'] }}"
    - "{{ find_results_lib_systemd['files'] }}"

- name: download chruby
  get_url:
    url: "{{ manageiq_chruby_url }}"
    dest: "/usr/src/{{ manageiq_chruby_tgz_file }}"

- name: untar chruby file
  unarchive:
    src: "/usr/src/{{ manageiq_chruby_tgz_file }}"
    dest: "/usr/src/"
    remote_src: yes

- name: run chruby make install
  command: make install
  args:
    chdir: "/usr/src/chruby-{{ manageiq_chruby_version }}"

- name: run chruby setup.sh
  command: scripts/setup.sh
  args:
    chdir: "/usr/src/chruby-{{ manageiq_chruby_version }}"

- debug: msg="{{ lookup('env','HOME') }} is an environment variable"

- name: create /root directory
  file:
    path: /root
    state: directory
    owner: root
    group: root
    mode: 0755

- name: ensure file /root/.gemrc exists
  copy:
    content: ""
    dest: /root/.gemrc
    state: file
    owner: root
    group: root
    mode: 0644

- name: ensure file /root/.bashrc exists
  file:
    path: /root/.bashrc
    state: file
    owner: root
    group: root
    mode: 0644

- name: ensure file /root/.bash_profile exists
  file:
    path: /root/.bash_profile
    state: file
    owner: root
    group: root
    mode: 0644

- name: ensure the line in .gemrc
  lineinfile:
    path: /root/.gemrc
    state: present
    line: "gem: --no-ri --no-rdoc --no-document"

- name: ensure the line in .bashrc
  lineinfile:
    path: /root/.bashrc
    state: present
    line: "source /usr/local/share/chruby/chruby.sh"

- name: download ruby-install
  get_url:
    url: "{{ manageiq_rubyinstall_url }}"
    dest: "/usr/src/{{ manageiq_rubyinstall_tgz_file }}"

- name: untar ruby-install file
  unarchive:
    src: "/usr/src/{{ manageiq_rubyinstall_tgz_file }}"
    dest: "/usr/src/"
    remote_src: yes

- name: run ruby-install make install
  command: make install
  args:
    chdir: "/usr/src/ruby-install-{{ manageiq_rubyinstall_version }}"

- name: run ruby-install
  command: "ruby-install ruby {{ manageiq_ruby_version }} -- --disable-install-doc"

- name: ensure the line in .bash_profile
  lineinfile:
    path: /root/.bash_profile
    state: present
    line: "chruby ruby-{{ manageiq_ruby_version }}"

- name: create necessary manageiq directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ manageiq_app_root }}"
    - "{{ manageiq_appliance_root }}"
    - "{{ manageiq_sui_root }}"

- name: create manageiq symlink
  file:
    src: "{{ manageiq_app_root }}"
    dest: /opt/manageiq/manageiq
    owner: root
    group: root
    state: link

- name: download manageiq release
  get_url:
    url: "https://github.com/ManageIQ/manageiq/tarball/{{ manageiq_release_name }}"
    dest: "/usr/src/manageiq-{{ manageiq_release_name }}"

- name: untar manageiq
  unarchive:
    src: "/usr/src/manageiq-{{ manageiq }}"
    dest: "{{ manageiq_app_root }}"
    remote_src: yes

- name: download manageiq-appliance release
  get_url:
    url: "https://github.com/ManageIQ/manageiq-appliance/tarball/{{ manageiq_release_name }}"
    dest: "/usr/src/manageiq-appliance-{{ manageiq_release_name }}"

- name: untar manageiq-appliance
  unarchive:
    src: "/usr/src/manageiq-appliance-{{ manageiq }}"
    dest: /usr/src
    remote_src: yes

- name: download manageiq-ui-service release
  get_url:
    url: "https://github.com/ManageIQ/manageiq-ui-service/tarball/{{ manageiq_release_name }}"
    dest: "/usr/src/manageiq-ui-service-{{ manageiq_release_name }}"

- name: untar manageiq-appliance
  unarchive:
    src: "/usr/src/manageiq-ui-service-{{ manageiq }}"
    dest: /usr/src
    remote_src: yes
